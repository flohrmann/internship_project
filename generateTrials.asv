%% QUESTION: how exactly to use the eccentricity? 
% can i also use coordinates? this wouldnt change with number of stims tho

function trial_data = generateTrials(n_trials, conditions, n_rows, n_columns, grid_visual_angle, ec_circle, ec_min)
% Initialize empty table to store trial data
trial_data = table();
% Loop over the number of trials
for trial = 1:n_trials
    % Determine the target side based on the trial number (so its 50/50 and changes with every trial)
    
    %% QUESTION: is it okay to take the columns right at the middle? or
    % have one column of distance so its very clear if its left/right?


   if mod(trial, 2) == 1
        % Odd trials go to the left side ('L')
        unique_point_x = randi([3, n_columns/2 - 2]);
        target_side = 'L';
    else
        % Even trials go to the right side ('R')
        unique_point_x = randi([n_columns/2 + 2, n_columns - 2]);
        target_side = 'R';
    end
    
    % Generate a random position for the target object within the determined side of the grid
    unique_point_y = randi([3, n_rows-2]); % so its not at the corner

    % Initialize a matrix with zeros for the grid
    trial_matrix = zeros(n_rows, n_columns);

    % Set the target object to 1
    trial_matrix(unique_point_x, unique_point_y) = 1;

    % Add trial data to the table
    trial_data.trialMatrix{trial, 1} = trial_matrix;
    trial_data.targetPosition(trial, :) = [unique_point_x, unique_point_y];
    trial_data.targetSide{trial, 1} = target_side;
end
% Rename the variables in the table
trial_data.Properties.VariableNames = {'TrialMatrix', 'TargetPosition', 'TargetSide'};
end
